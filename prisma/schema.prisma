// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Category {
  Tshirt
  Hoodies
  Streetwear
  luxury
  Jackets
  Sweatshirts
}

enum UserRole {
  admin
  user
}

enum CollaboratorRole {
  ecommerce_expert
  supplier
  influencer
  developer
}
model CartItem {
  id        String   @id @default(cuid())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    String
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([cartId, itemId]) 
}


model Cart {
  id        String      @id @default(cuid())
  userId    String      @unique
  quantity Int         @default(0)
  user      User        @relation(fields: [userId], references: [id])
  cartItems CartItem[]   
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model Item {
  id          String      @id @default(cuid())
  name        String      @db.VarChar(100)
  image       String
  description String
  cartItems   CartItem[]
  price       Float
  stock       Int
  type        Category
  rating      Int         @default(0)
  isHot       Boolean     @default(false)
  isNew       Boolean     @default(false)
  isFeatured  Boolean     @default(false)
  isOnSale    Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String?
  user        User?       @relation("UserItems", fields: [userId], references: [id])
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String   @db.VarChar(100)
  password  String
  role      UserRole @default(user)
  image     String?
  AccessToken String?
  RefreshToken String?
  cart      Cart?    
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  items     Item[]   @relation("UserItems")
}




model Collaborator {
  id       String   @id @default(cuid())
  name     String   @db.VarChar(100)
  email    String   @unique
  role      CollaboratorRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}